{"version":3,"file":"component---node-modules-lekoarts-gatsby-theme-emma-core-src-templates-projects-query-tsx-f0ce6ed1769b0c3b74bf.js","mappings":"2PAiGA,MA1EoBA,IAAA,IAAC,KAAEC,EAAI,MAAEC,EAAK,MAAEC,GAAyBH,EAAA,OAC3DI,EAAAA,EAAAA,GAACC,EAAAA,GAASC,IAAG,CACXC,GAAI,CACFC,SAAU,WACV,WAAY,CACVC,QAAS,KACTC,QAAS,QACTC,WAAY,SAGhBT,MAAOA,IAEPE,EAAAA,EAAAA,GAAA,OACEG,GAAI,CACFK,KAAM,EACNC,OAAQ,OACRL,SAAU,WACVM,IAAK,EACLC,MAAO,OACPC,EAAG,CACDC,MAAO,QACPJ,OAAQ,OACRD,KAAM,EACNM,QAAS,EACTV,SAAU,WACVM,IAAK,EACLC,MAAO,OACPI,OAAQ,GACRC,WAAY,uBACZC,eAAgB,WAIpBjB,EAAAA,EAAAA,GAAA,OACEG,GAAI,CAEF,QAAS,CACPM,OAAQ,OACRD,KAAM,EACNJ,SAAU,sBACVM,IAAK,EACLC,MAAO,OACP,QAAS,CACPP,SAAU,yBAKhBJ,EAAAA,EAAAA,GAACkB,EAAAA,EAAW,CAACC,QAASpB,EAAQ,QAAU,OAAQqB,MAAOvB,EAAKwB,MAAMC,gBAAgBC,gBAAiBC,IAAI,OAEzGxB,EAAAA,EAAAA,GAACyB,EAAAA,GAAI,CAACC,GAAI7B,EAAK8B,KAAM,aAAY,uBAAuB9B,EAAK+B,UAC3D5B,EAAAA,EAAAA,GAAA,OACEG,GAAI,CACF0B,gBAAiBhC,EAAKgB,MACtBJ,OAAQ,OACRD,KAAM,EACNJ,SAAU,WACVM,IAAK,EACLC,MAAO,OACPI,QAAS,EACTe,QAAS,EACTd,WAAY,2BACZ,UAAW,CACTc,QAAS,OAIf9B,EAAAA,EAAAA,GAAA,OAAKG,GAAI,CAAE4B,SAAU,EAAGC,WAAY,SAAWnC,EAAKoC,SACpDjC,EAAAA,EAAAA,GAAA,OAAKG,GAAI,CAAE4B,SAAU,IAAMlC,EAAKqC,WAGvB,E,UCdjB,MAvD8CtC,IAAmB,IAAlB,SAAEuC,GAAUvC,EACzD,MAAMwC,GAAQC,EAAAA,EAAAA,IAASF,EAASG,OAAQ,CACtCC,KAAM,CAAE9B,OAAQ,MAChBiB,GAAI,CAAEjB,OAAQ,UAGhB,OAAwB,IAApB0B,EAASG,QAETtC,EAAAA,EAAAA,GAACwC,EAAAA,EAAM,MACLxC,EAAAA,EAAAA,GAACyC,EAAAA,GAAS,MACRzC,EAAAA,EAAAA,GAAC0C,EAAAA,GAAOC,EAAC,KAAC,MACJ,KACJ3C,EAAAA,EAAAA,GAAA,QAAM4C,KAAK,MAAM,aAAW,cAAa,MAGxC,KACD5C,EAAAA,EAAAA,GAAA,WAAM,qBACWA,EAAAA,EAAAA,GAAA,SAAG,+BAA+B,iDAA+C,KAClGA,EAAAA,EAAAA,GAAA,SAAG,YAAY,+EAA6E,KAC5FA,EAAAA,EAAAA,GAAC0C,EAAAA,GAAO9B,EAAC,CAACiC,KAAK,gFAA+E,UAG7F,IAAI,gCAGP7C,EAAAA,EAAAA,GAAC0C,EAAAA,GAAOC,EAAC,MACP3C,EAAAA,EAAAA,GAAA,SAAG,UAAU,KAACA,EAAAA,EAAAA,GAAA,WAAM,iDACyBA,EAAAA,EAAAA,GAAA,YAAM,oBAAuB,sDACxDA,EAAAA,EAAAA,GAAA,YAAM,WAAc,mBAAeA,EAAAA,EAAAA,GAAA,YAAM,aAAgB,6EAChC,KAC3CA,EAAAA,EAAAA,GAAC0C,EAAAA,GAAO9B,EAAC,CAACiC,KAAK,gFAA+E,UAEnF,QASnB7C,EAAAA,EAAAA,GAACwC,EAAAA,EAAM,CACLrC,GAAI,CACFG,QAAS,OACTwC,oBAAqB,uCACrBnC,MAAO,SAGRyB,EAAMW,KAAI,CAACjD,EAAOkD,KACjBhD,EAAAA,EAAAA,GAACiD,EAAW,CAACnD,MAAOA,EAAOC,MAAiB,IAAViD,EAAanD,KAAMsC,EAASa,GAAQE,IAAKf,EAASa,GAAOrB,SAEtF,EAMN,MAAMwB,EAAeA,KAAMnD,EAAAA,EAAAA,GAACoD,EAAAA,EAAG,MC/EtC,MCQe,SAAyBxD,GAAuB,OAAjByD,GAAczD,EAC1D,MACE0D,MAAM,WAAEC,IACNF,EAEJ,OAAOG,EAAAA,cAACC,EAAQC,OAAAC,OAAA,CAACxB,SAAUoB,EAAWK,OAAWP,GACnD,C","sources":["webpack://emma/./src/@lekoarts/gatsby-theme-emma/components/project-item.tsx","webpack://emma/./node_modules/@lekoarts/gatsby-theme-emma/src/components/projects.tsx","webpack://emma/./node_modules/@lekoarts/gatsby-theme-emma-core/src/templates/projects-query.tsx","webpack://emma/./node_modules/@lekoarts/gatsby-theme-emma/src/@lekoarts/gatsby-theme-emma-core/components/projects.tsx"],"sourcesContent":["/** @jsx jsx */\r\nimport { jsx } from \"theme-ui\"\r\nimport { Link } from \"gatsby\"\r\nimport { animated } from \"react-spring\"\r\nimport { GatsbyImage, IGatsbyImageData } from \"gatsby-plugin-image\"\r\n\r\ntype ProjectItemProps = {\r\n  node: {\r\n    color: string\r\n    title: string\r\n    slug: string\r\n    service: string\r\n    client: string\r\n    cover: {\r\n      childImageSharp: {\r\n        gatsbyImageData: IGatsbyImageData\r\n      }\r\n    }\r\n  }\r\n  style: any\r\n  eager?: boolean\r\n}\r\n\r\nconst ProjectItem = ({ node, style, eager }: ProjectItemProps) => (\r\n  <animated.div\r\n    sx={{\r\n      position: `relative`,\r\n      \"&:before\": {\r\n        content: `\"\"`,\r\n        display: `block`,\r\n        paddingTop: `100%`,\r\n      },\r\n    }}\r\n    style={style}\r\n  >\r\n    <div\r\n      sx={{\r\n        left: 0,\r\n        height: `100%`,\r\n        position: `absolute`,\r\n        top: 0,\r\n        width: `100%`,\r\n        a: {\r\n          color: `white`,\r\n          height: `100%`,\r\n          left: 0,\r\n          padding: 4,\r\n          position: `absolute`,\r\n          top: 0,\r\n          width: `100%`,\r\n          zIndex: 10,\r\n          transition: `all 0.3s ease-in-out`,\r\n          textDecoration: `none`,\r\n        },\r\n      }}\r\n    >\r\n      <div\r\n        sx={{\r\n          // @ts-ignore\r\n          \"> div\": {\r\n            height: `100%`,\r\n            left: 0,\r\n            position: `absolute !important`,\r\n            top: 0,\r\n            width: `100%`,\r\n            \"> div\": {\r\n              position: `static !important`,\r\n            },\r\n          },\r\n        }}\r\n      >\r\n        <GatsbyImage loading={eager ? `eager` : `lazy`} image={node.cover.childImageSharp.gatsbyImageData} alt=\"\" />\r\n      </div>\r\n      <Link to={node.slug} aria-label={`View detail page of ${node.title}`}>\r\n        <div\r\n          sx={{\r\n            backgroundColor: node.color,\r\n            height: `100%`,\r\n            left: 0,\r\n            position: `absolute`,\r\n            top: 0,\r\n            width: `100%`,\r\n            zIndex: -2,\r\n            opacity: 0,\r\n            transition: `opacity 0.3s ease-in-out`,\r\n            \"&:hover\": {\r\n              opacity: 1,\r\n            },\r\n          }}\r\n        />\r\n        <div sx={{ fontSize: 5, fontWeight: `bold` }}>{node.client}</div>\r\n        <div sx={{ fontSize: 2 }}>{node.service}</div>\r\n      </Link>\r\n    </div>\r\n  </animated.div>\r\n)\r\n\r\nexport default ProjectItem\r\n","/** @jsx jsx */\nimport type { HeadFC } from \"gatsby\"\nimport { jsx, Container } from \"theme-ui\"\nimport { Themed } from \"@theme-ui/mdx\"\nimport { useTrail } from \"react-spring\"\nimport { IGatsbyImageData } from \"gatsby-plugin-image\"\nimport Layout from \"./layout\"\nimport ProjectItem from \"./project-item\"\nimport SEO from \"./seo\"\n\nexport type EmmaProjectsProps = {\n  projects: {\n    color: string\n    slug: string\n    title: string\n    service: string\n    client: string\n    cover: {\n      childImageSharp: {\n        gatsbyImageData: IGatsbyImageData\n      }\n    }\n  }[]\n}\n\nconst Projects: React.FC<EmmaProjectsProps> = ({ projects }) => {\n  const trail = useTrail(projects.length, {\n    from: { height: `0%` },\n    to: { height: `100%` },\n  })\n\n  if (projects.length === 0) {\n    return (\n      <Layout>\n        <Container>\n          <Themed.p>\n            Hi!{` `}\n            <span role=\"img\" aria-label=\"Wave emoji\">\n              ðŸ‘‹\n            </span>\n            {` `}\n            <br />\n            Thanks for using <b>@lekoarts/gatsby-theme-emma</b>. You currently don't have any content in your{` `}\n            <i>projects</i> folder - that's why this page displays a placeholder text. Head over to the{` `}\n            <Themed.a href=\"https://github.com/LekoArts/gatsby-themes/tree/main/themes/gatsby-theme-emma\">\n              README\n            </Themed.a>\n            {` `}\n            to learn how to setup them.\n          </Themed.p>\n          <Themed.p>\n            <b>TL;DR:</b> <br />\n            The starter automatically created the folder <code>content/projects</code>. Go into this folder, create a\n            new folder called <code>example</code> and create an <code>index.mdx</code> file there and place an image.\n            Edit the frontmatter like described in the{` `}\n            <Themed.a href=\"https://github.com/LekoArts/gatsby-themes/tree/main/themes/gatsby-theme-emma\">\n              README\n            </Themed.a>\n            .\n          </Themed.p>\n        </Container>\n      </Layout>\n    )\n  }\n\n  return (\n    <Layout\n      sx={{\n        display: `grid`,\n        gridTemplateColumns: `repeat(auto-fit, minmax(280px, 1fr))`,\n        width: `100%`,\n      }}\n    >\n      {trail.map((style, index) => (\n        <ProjectItem style={style} eager={index === 0} node={projects[index]} key={projects[index].slug} />\n      ))}\n    </Layout>\n  )\n}\n\nexport default Projects\n\nexport const Head: HeadFC = () => <SEO />\n","import { graphql } from \"gatsby\"\nimport ProjectsComponent, { Head } from \"../components/projects\"\n\nexport default ProjectsComponent\n\nexport { Head }\n\nexport const query = graphql`\n  {\n    allProject(sort: { date: DESC }) {\n      nodes {\n        color\n        slug\n        service\n        client\n        title\n        cover {\n          childImageSharp {\n            gatsbyImageData(width: 850, quality: 90)\n          }\n        }\n      }\n    }\n  }\n`\n","import * as React from \"react\"\nimport Projects, { Head } from \"../../../components/projects\"\n\ntype Props = {\n  data: {\n    allProject: any\n    [key: string]: string\n  }\n  [key: string]: any\n}\n\nexport default function EmmaCoreProjects({ ...props }: Props) {\n  const {\n    data: { allProject },\n  } = props\n\n  return <Projects projects={allProject.nodes} {...props} />\n}\n\nexport { Head }\n"],"names":["_ref","node","style","eager","jsx","animated","div","sx","position","content","display","paddingTop","left","height","top","width","a","color","padding","zIndex","transition","textDecoration","GatsbyImage","loading","image","cover","childImageSharp","gatsbyImageData","alt","Link","to","slug","title","backgroundColor","opacity","fontSize","fontWeight","client","service","projects","trail","useTrail","length","from","Layout","Container","Themed","p","role","href","gridTemplateColumns","map","index","ProjectItem","key","Head","SEO","props","data","allProject","React","Projects","Object","assign","nodes"],"sourceRoot":""}